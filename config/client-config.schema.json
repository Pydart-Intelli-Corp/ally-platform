{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ally-platform.com/schemas/client-config.schema.json",
  "title": "Ally Platform Client Configuration Schema",
  "description": "Configuration schema for white-label client customization of the Ally Platform",
  "type": "object",
  "required": ["meta", "branding", "features", "ui", "ai"],
  "properties": {
    "meta": {
      "type": "object",
      "description": "Metadata about this configuration",
      "required": ["version", "clientId", "lastUpdated"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Semantic version of the configuration schema",
          "examples": ["1.0.0", "2.1.3"]
        },
        "clientId": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]{3,50}$",
          "description": "Unique identifier for the client",
          "examples": ["acme-corp", "startup-xyz", "enterprise-123"]
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of last configuration update",
          "examples": ["2025-08-04T10:30:00Z"]
        },
        "configName": {
          "type": "string",
          "maxLength": 100,
          "description": "Human-readable name for this configuration",
          "examples": ["Production Config", "Development Environment"]
        },
        "description": {
          "type": "string",
          "maxLength": 500,
          "description": "Optional description of this configuration"
        }
      }
    },
    "branding": {
      "type": "object",
      "description": "Visual branding and company identity settings",
      "required": ["companyName", "primaryColor"],
      "properties": {
        "companyName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Client company name displayed throughout the platform",
          "examples": ["Acme Corporation", "TechStart Solutions"]
        },
        "logoUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL to the company logo image (SVG, PNG, JPG)",
          "examples": [
            "https://cdn.example.com/logo.svg",
            "/assets/client-logo.png"
          ]
        },
        "faviconUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL to the favicon for browser tabs",
          "examples": ["https://cdn.example.com/favicon.ico"]
        },
        "primaryColor": {
          "type": "string",
          "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
          "description": "Primary brand color in hex format",
          "examples": ["#3B82F6", "#FF6B6B", "#10B981"]
        },
        "secondaryColor": {
          "type": "string",
          "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
          "description": "Secondary brand color in hex format",
          "examples": ["#64748B", "#F59E0B", "#8B5CF6"]
        },
        "accentColor": {
          "type": "string",
          "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
          "description": "Accent color for highlights and call-to-actions",
          "examples": ["#EF4444", "#F59E0B"]
        },
        "font": {
          "type": "string",
          "enum": [
            "inter",
            "roboto",
            "poppins",
            "opensans",
            "nunito",
            "lato",
            "system"
          ],
          "default": "inter",
          "description": "Primary font family for the platform",
          "examples": ["inter", "roboto", "poppins"]
        },
        "customCss": {
          "type": "string",
          "maxLength": 10000,
          "description": "Custom CSS for advanced styling overrides"
        }
      }
    },
    "features": {
      "type": "object",
      "description": "Feature toggles to enable/disable platform capabilities",
      "properties": {
        "chatEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable AI chat functionality"
        },
        "voiceEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable voice input/output capabilities"
        },
        "fileUploadEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Allow users to upload files for processing"
        },
        "realTimeEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time features (WebSocket connections)"
        },
        "analyticsEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable usage analytics and tracking"
        },
        "notificationsEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable push and in-app notifications"
        },
        "collaborationEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable multi-user collaboration features"
        },
        "apiAccessEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable external API access for integrations"
        },
        "exportEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Allow users to export data and conversations"
        }
      }
    },
    "ui": {
      "type": "object",
      "description": "User interface layout and behavior settings",
      "properties": {
        "layout": {
          "type": "string",
          "enum": ["modern", "classic", "minimal", "dashboard"],
          "default": "modern",
          "description": "Overall UI layout style"
        },
        "darkMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable dark mode by default"
        },
        "themeToggle": {
          "type": "boolean",
          "default": true,
          "description": "Allow users to toggle between light/dark themes"
        },
        "sidebarCollapsible": {
          "type": "boolean",
          "default": true,
          "description": "Allow sidebar to be collapsed/expanded"
        },
        "compactMode": {
          "type": "boolean",
          "default": false,
          "description": "Use compact spacing for dense information display"
        },
        "animationsEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable UI animations and transitions"
        },
        "accessibilityMode": {
          "type": "boolean",
          "default": false,
          "description": "Enhanced accessibility features"
        }
      }
    },
    "ai": {
      "type": "object",
      "description": "AI model and behavior configuration",
      "required": ["model"],
      "properties": {
        "model": {
          "type": "string",
          "enum": [
            "gemini-2.5-flash-lite",
            "gemini-2.5-flash",
            "gemini-2.0-flash-exp",
            "gpt-4o",
            "gpt-4o-mini",
            "claude-3-5-sonnet",
            "claude-3-5-haiku"
          ],
          "default": "gemini-2.5-flash-lite",
          "description": "AI model to use for responses"
        },
        "promptTemplate": {
          "type": "string",
          "maxLength": 5000,
          "description": "Custom prompt template for AI responses",
          "examples": [
            "You are a helpful assistant for {companyName}. Always be professional and informative."
          ]
        },
        "temperature": {
          "type": "number",
          "minimum": 0,
          "maximum": 2,
          "default": 0.7,
          "description": "AI response creativity (0-2, higher = more creative)"
        },
        "maxTokens": {
          "type": "integer",
          "minimum": 100,
          "maximum": 8000,
          "default": 2000,
          "description": "Maximum tokens for AI responses"
        },
        "systemMessage": {
          "type": "string",
          "maxLength": 2000,
          "description": "System message to guide AI behavior"
        },
        "responseFormat": {
          "type": "string",
          "enum": ["text", "markdown", "json"],
          "default": "markdown",
          "description": "Default format for AI responses"
        }
      }
    },
    "integrations": {
      "type": "object",
      "description": "External service integrations and API configurations",
      "properties": {
        "weaviateUrl": {
          "type": "string",
          "format": "uri",
          "description": "Weaviate vector database URL",
          "examples": ["https://your-cluster.weaviate.network"]
        },
        "weaviateApiKey": {
          "type": "string",
          "description": "Weaviate API key for authentication"
        },
        "geminiApiKey": {
          "type": "string",
          "description": "Google Gemini API key"
        },
        "openaiApiKey": {
          "type": "string",
          "description": "OpenAI API key for GPT models"
        },
        "anthropicApiKey": {
          "type": "string",
          "description": "Anthropic API key for Claude models"
        },
        "webhook": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "format": "uri",
              "description": "Webhook URL for external notifications"
            },
            "secret": {
              "type": "string",
              "description": "Webhook secret for verification"
            },
            "events": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "user.created",
                  "chat.completed",
                  "file.uploaded",
                  "error.occurred"
                ]
              },
              "description": "Events to send to webhook"
            }
          }
        }
      }
    },
    "languages": {
      "type": "object",
      "description": "Internationalization and localization settings",
      "required": ["default", "supported"],
      "properties": {
        "default": {
          "type": "string",
          "pattern": "^[a-z]{2}(-[A-Z]{2})?$",
          "default": "en",
          "description": "Default language code (ISO 639-1)",
          "examples": ["en", "hi", "ar", "es-ES", "fr-CA"]
        },
        "supported": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2})?$"
          },
          "minItems": 1,
          "uniqueItems": true,
          "default": ["en"],
          "description": "List of supported language codes",
          "examples": [
            ["en", "hi", "ar"],
            ["en", "es", "fr"]
          ]
        },
        "rtlSupport": {
          "type": "boolean",
          "default": false,
          "description": "Enable right-to-left text support for Arabic, Hebrew, etc."
        },
        "autoDetect": {
          "type": "boolean",
          "default": true,
          "description": "Auto-detect user language from browser settings"
        }
      }
    },
    "security": {
      "type": "object",
      "description": "Security and authentication settings",
      "properties": {
        "jwtExpiration": {
          "type": "integer",
          "minimum": 300,
          "maximum": 86400,
          "default": 3600,
          "description": "JWT token expiration time in seconds"
        },
        "refreshTokenExpiration": {
          "type": "integer",
          "minimum": 3600,
          "maximum": 2592000,
          "default": 604800,
          "description": "Refresh token expiration time in seconds (7 days default)"
        },
        "rateLimit": {
          "type": "integer",
          "minimum": 10,
          "maximum": 10000,
          "default": 1000,
          "description": "API requests per hour per user"
        },
        "sessionTimeout": {
          "type": "integer",
          "minimum": 300,
          "maximum": 28800,
          "default": 7200,
          "description": "User session timeout in seconds"
        },
        "passwordPolicy": {
          "type": "object",
          "properties": {
            "minLength": {
              "type": "integer",
              "minimum": 6,
              "maximum": 50,
              "default": 8
            },
            "requireUppercase": {
              "type": "boolean",
              "default": true
            },
            "requireNumbers": {
              "type": "boolean",
              "default": true
            },
            "requireSpecialChars": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "mfaEnabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable multi-factor authentication"
        }
      }
    },
    "analytics": {
      "type": "object",
      "description": "Analytics and tracking configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable analytics tracking"
        },
        "trackingId": {
          "type": "string",
          "description": "Google Analytics or similar tracking ID",
          "examples": ["GA-123456789", "GTM-XXXXXXX"]
        },
        "customEvents": {
          "type": "boolean",
          "default": true,
          "description": "Track custom application events"
        },
        "userJourneyTracking": {
          "type": "boolean",
          "default": false,
          "description": "Track detailed user journey and behavior"
        },
        "performanceMonitoring": {
          "type": "boolean",
          "default": true,
          "description": "Monitor application performance metrics"
        },
        "errorTracking": {
          "type": "boolean",
          "default": true,
          "description": "Track and report application errors"
        }
      }
    },
    "notifications": {
      "type": "object",
      "description": "Notification system configuration",
      "properties": {
        "email": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "smtpHost": {
              "type": "string",
              "description": "SMTP server hostname"
            },
            "smtpPort": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535,
              "default": 587
            },
            "fromAddress": {
              "type": "string",
              "format": "email",
              "description": "From email address for notifications"
            },
            "templates": {
              "type": "object",
              "properties": {
                "welcome": {
                  "type": "string",
                  "description": "Welcome email template ID"
                },
                "passwordReset": {
                  "type": "string",
                  "description": "Password reset email template ID"
                }
              }
            }
          }
        },
        "push": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "vapidPublicKey": {
              "type": "string",
              "description": "VAPID public key for web push notifications"
            }
          }
        },
        "inApp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "position": {
              "type": "string",
              "enum": ["top-right", "top-left", "bottom-right", "bottom-left"],
              "default": "top-right"
            }
          }
        }
      }
    },
    "limits": {
      "type": "object",
      "description": "Platform usage limits and quotas",
      "properties": {
        "maxUsers": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of users for this client"
        },
        "maxStorageGB": {
          "type": "number",
          "minimum": 0.1,
          "description": "Maximum storage in GB"
        },
        "maxApiCallsPerMonth": {
          "type": "integer",
          "minimum": 1000,
          "description": "Maximum API calls per month"
        },
        "maxFileUploadMB": {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "default": 10,
          "description": "Maximum file upload size in MB"
        }
      }
    }
  }
}
